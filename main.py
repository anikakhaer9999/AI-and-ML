# -*- coding: utf-8 -*-
"""Assingment2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_7O7vw3Aj1jn1vQYfF3lxKO_lcxGhm-k
"""

from sklearn import datasets
import numpy as np
import random as random
import matplotlib.pyplot as mat

iris = datasets.load_iris()

X = iris.data[:, :2]
y = (iris.target != 0) * 1

x = X.tolist() 
y = y.tolist()

data_len = len(x)


for i in range (data_len) :
  x[i].insert(0,1)

Train_setx = []
Val_setx = []
Test_setx = []

Train_sety = []
Val_sety = []
Test_sety = []


for www in range(data_len):
    rand= random.random()
    if rand >=0 and rand<=0.7: 
      Train_setx.append(x[www])

    elif rand>0.7 and rand<=0.85:
      Val_setx.append(x[www])

    else: 
      Test_setx.append(x[www])


for www in range(data_len):
    rand= random.random()
    if rand >=0 and rand<=0.7: 
      Train_sety.append(y[www])

    elif rand>0.7 and rand<=0.85:
      Val_sety.append(y[www])

    else: 
      Test_sety.append(y[www])

m =np.array(Train_setx) 
n = np.array(Val_setx) 
o =np.array(Test_setx) 
p =np.array(Train_sety) 
q =np.array(Val_sety) 
r =np.array(Test_sety)    


Theta = [0.1 , 0.2 , 0.03]
lr = 0.00001

train_loss =[]
epoch =[]

for rrr in range(1000):
  tj = 0
  for i in range(len(Train_setx)):
      z = np.dot(m[i],Theta)
      h = 1/(1+np.exp(-z))
      j = (-p[i]*np.log(h))- ((1-p[i])*np.log(1-h))
      tj = (tj + j) 
      dv = m[i]*(h-p[i])
      Theta = (Theta - dv*lr)

  tj = tj/len(Train_setx)
  train_loss.append(tj)
  epoch.append(rrr)

mat.plot(epoch , train_loss)
mat.show()

correct = 0
for i in range(len(Val_setx)):
    z = np.dot(n[i],Theta)
    h = 1/(1+np.exp(-z))
    if h >= 0.5:
      h =1 
    else: 
      h = 0   

    if h == q[i]:
      correct += 1
val_acc = correct/(len(Val_setx))*100

print(val_acc)